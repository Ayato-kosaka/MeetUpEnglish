// Place all the styles related to the home controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
$widthPC: 934px; //PC
$widthTab: 934px; //タブレット
$widthSp: 934px; //スマートフォン
@mixin pc ($widthPC: 934px){
  @media (min-width: ($widthPC)) {
    @content;
  }
}
@mixin tab($minTab, $maxTab) {
  @media (min-width: $minTab) and (max-width: ($maxTab)) {
    @content;
  }
}
@mixin sp ($widthTab: 934px){
  @media (max-width: ($widthTab)) {
    @content;
  }
}

$busoan: 'EB Garamond', '游明朝体', 'YuMincho', '游明朝', 'Yu Mincho', 'ヒラギノ明朝 ProN W3', 'Hiragino Mincho ProN W3', HiraMinProN-W3, 'ヒラギノ明朝 ProN', 'Hiragino Mincho ProN', 'ヒラギノ明朝 Pro', 'Hiragino Mincho Pro', 'HGS明朝E', serif;



@mixin logofont($size: 50px){font-family: Helevetica;font-weight: bold;font-style: oblique;font-size: $size}

@mixin flexbox {display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: flex;}
@mixin inline-flex {  display: -webkit-inline-box;  display: -moz-inline-box;  display: -webkit-inline-flex;  display: -ms-inline-flexbox;  display: inline-flex;}
//row row-reverse column column-reverse
@mixin flex-direction($value: row) {  @if $value == row-reverse {    -webkit-box-direction: reverse;    -webkit-box-orient: horizontal;    -moz-box-direction: reverse;    -moz-box-orient: horizontal;  } @else if $value == column {    -webkit-box-direction: normal;    -webkit-box-orient: vertical;    -moz-box-direction: normal;    -moz-box-orient: vertical;  } @else if $value == column-reverse {
      -webkit-box-direction: reverse;    -webkit-box-orient: vertical;    -moz-box-direction: reverse;    -moz-box-orient: vertical;  } @else {    -webkit-box-direction: normal;    -webkit-box-orient: horizontal;    -moz-box-direction: normal;    -moz-box-orient: horizontal;  }  -webkit-flex-direction: $value;  -ms-flex-direction: $value;  flex-direction: $value;}
//nowrap wrap wrap-reverse
@mixin flex-wrap($value: nowrap) {-webkit-flex-wrap: $value;@if $value == nowrap {-ms-flex-wrap: none;} @else {-ms-flex-wrap: $value;}flex-wrap: $value;}
@mixin flex-flow($values: (row nowrap)) {-webkit-flex-flow: $values;-ms-flex-flow: $values;flex-flow: $values;}
//flex-start flex-end  center space-between space-around
@mixin justify-content($value: flex-start) {@if $value == flex-start {-webkit-box-pack: start;-moz-box-pack: start;-ms-flex-pack: start;} @else if $value == flex-end {-webkit-box-pack: end;-moz-box-pack: end;-ms-flex-pack: end;} @else if $value == space-between {-webkit-box-pack: justify;-moz-box-pack: justify;-ms-flex-pack: justify;} @else if $value == space-around {-ms-flex-pack: distribute;} @else {-webkit-box-pack: $value;-moz-box-pack: $value;-ms-flex-pack: $value;}-webkit-justify-content: $value;justify-content: $value;}
//strech flex-start flex-end center baseline
@mixin align-items($value: stretch) {@if $value == flex-start {-webkit-box-align: start;-moz-box-align: start;-ms-flex-align: start;} @else if $value == flex-end {-webkit-box-align: end;-moz-box-align: end;-ms-flex-align: end;} @else {-webkit-box-align: $value;-moz-box-align: $value;-ms-flex-align: $value;}-webkit-align-items: $value;align-items: $value;}
@mixin order($int: 0) {-webkit-box-ordinal-group: $int + 1;-moz-box-ordinal-group: $int + 1;-webkit-order: $int;-ms-flex-order: $int;order: $int;}
@mixin flex-grow($int: 1) {-webkit-box-flex: $int;-moz-box-flex: $int;-webkit-flex-grow: $int;-ms-flex: $int;flex-grow: $int;}
@mixin flex-shrink($int: 0) {-webkit-flex-shrink: $int;-moz-flex-shrink: $int;-ms-flex: $int;flex-shrink: $int;}
@mixin flex-basis($value: auto) {  -webkit-flex-basis: $value;  flex-basis: $value;}
